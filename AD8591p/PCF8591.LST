C51 COMPILER V9.01   PCF8591                                                               07/21/2011 22:01:13 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE PCF8591
OBJECT MODULE PLACED IN PCF8591.OBJ
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE PCF8591.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          //-----------------------函数声明，变量定义------------------------
   3          #include <reg52.h>
   4          #include <intrins.h>
   5          sbit SCL=P1^2;                   // 将p1.2口模拟时钟口
   6          sbit SDA=P1^3;                   // 将p1.3口模拟数据口
   7          
   8          bit askflag;
   9          #define uchar unsigned char
  10          #define uint  unsigned int
  11          #define disdata  P0              //显示数据码输出口
  12          unsigned char code table[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};//定义共阳数码管显示字型码
  13          uchar code Tab[]={0x00,0xfe,0xfd,0xfb,0xf7,0xef,0xdf,0xbf,0x7f};           //数码管位选表
  14          
  15          
  16          uint data dis[4]={0x00,0x00,0x00,0x00}; 
  17                                    //定义3个显示数据单元和1个数据存储单元
  18          uint data dat[4]={0x00,0x00,0x00,0x00}; 
  19          
  20          
  21          #define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
  22                                   
  23          bit   bdata SystemError;                //从机错误标志位
  24          
  25          /*********************** PCF8591专用变量定义 ***********************/
  26          
  27          #define PCF8591_WRITE   0x90 
  28          #define PCF8591_READ    0x91
  29          #define  NUM  4                     //接收和发送缓存区的深度
  30          uchar idata receivebuf[4]={0x00,0x00,0x00,0x00};    //数据接收缓冲区
  31          uchar idata backs[4]={0x00,0x00,0x00,0x00}; 
  32          
  33          
  34          /*******************************************************************/
  35          /*                                                                 */
  36          /*  延时函数                                                       */
  37          /*                                                                 */
  38          /*******************************************************************/
  39          
  40          void delay(uint ms)
  41          {
  42   1          while(ms--)
  43   1              {
  44   2            uchar i;
  45   2                for(i=0;i<250;i++)  
  46   2                 {
  47   3                  _nop_();                       
  48   3                      _nop_();
  49   3                      _nop_();
  50   3                      _nop_();
  51   3                 }
  52   2              }
  53   1      }               
  54          
  55          
C51 COMPILER V9.01   PCF8591                                                               07/21/2011 22:01:13 PAGE 2   

  56          //-------------------------------------------------------------------
  57          // 函数名称： iic_start()
  58          // 函数功能： 启动I2C总线子程序
  59          //-------------------------------------------------------------------
  60          void iic_start(void)
  61          { //时钟保持高，数据线从高到低一次跳变，I2C通信开始
  62   1              SDA = 1;     
  63   1              SCL = 1;
  64   1              delayNOP();      // 延时5us 
  65   1              SDA = 0;
  66   1              delayNOP();
  67   1          SCL = 0;
  68   1      }
  69          //-------------------------------------------------------------------
  70          // 函数名称： iic_stop()
  71          // 函数功能： 停止I2C总线数据传送子程序
  72          //-------------------------------------------------------------------
  73          void iic_stop(void)
  74          {       
  75   1              SDA = 0;           //时钟保持高，数据线从低到高一次跳变，I2C通信停止
  76   1              SCL = 1;
  77   1              delayNOP();
  78   1              SDA = 1;
  79   1              delayNOP();
  80   1          SCL = 0;
  81   1      }
  82          //------------------------------------------------------------------
  83          // 函数名称： iicInit_()
  84          // 函数功能： 初始化I2C总线子程序
  85          //------------------------------------------------------------------
  86           void iicInit(void)
  87             {
  88   1         SCL = 0;
  89   1         iic_stop();  
  90   1         }  
  91          //-------------------------------------------------------------------
  92          // 函数名称： slave_ACK
  93          // 函数功能： 从机发送应答位子程序
  94          //-------------------------------------------------------------------
  95          void slave_ACK(void)
  96          {
  97   1              SDA = 0;  
  98   1              SCL = 1;
  99   1              delayNOP();     
 100   1              SCL = 0;
 101   1      }
 102          //-------------------------------------------------------------------
 103          // 函数名称： slave_NOACK
 104          // 函数功能： 从机发送非应答位子程序，迫使数据传输过程结束
 105          //-------------------------------------------------------------------
 106          void slave_NOACK(void)
 107          { 
 108   1              SDA = 1;
 109   1              SCL = 1;
 110   1              delayNOP();
 111   1              SDA = 0;
 112   1          SCL = 0;  
 113   1      }
 114          //-------------------------------------------------------------------
 115          // 函数名称： check_ACK
 116          // 函数功能： 主机应答位检查子程序，迫使数据传输过程结束
 117          //-------------------------------------------------------------------
C51 COMPILER V9.01   PCF8591                                                               07/21/2011 22:01:13 PAGE 3   

 118          void check_ACK(void)
 119          {           
 120   1          SDA = 1;        // 将p1.1设置成输入，必须先向端口写1
 121   1              SCL = 1;
 122   1              askflag = 0;
 123   1              delayNOP();   
 124   1              if(SDA == 1)    // 若SDA=1表明非应答，置位非应答标志askflag
 125   1          askflag = 1;
 126   1              SCL = 0;
 127   1      }
 128          //-------------------------------------------------------------------
 129          // 函数名称： IICSendByte
 130          // 入口参数： ch
 131          // 函数功能： 发送一个字节
 132          //-------------------------------------------------------------------
 133          void IICSendByte(uchar ch)
 134           
 135          {
 136   1              unsigned char idata n=8;     // 向SDA上发送一位数据字节，共八位
 137   1      
 138   1              while(n--)
 139   1              { 
 140   2              if((ch&0x80) == 0x80)    // 若要发送的数据最高位为1则发送位1
 141   2                 {
 142   3                              SDA = 1;    // 传送位1
 143   3                              SCL = 1;
 144   3                          delayNOP();
 145   3                      //      SDA = 0;        
 146   3                              SCL = 0; 
 147   3                 }
 148   2                      else
 149   2                      {  
 150   3                              SDA = 0;    // 否则传送位0
 151   3                              SCL = 1;
 152   3                              delayNOP();
 153   3                              SCL = 0;
 154   3                      }
 155   2                      ch = ch<<1;    // 数据左移一位
 156   2              }
 157   1      }
 158          //-------------------------------------------------------------------
 159          // 函数名称： IICreceiveByte
 160          // 返回接收的数据
 161          // 函数功能： 接收一字节子程序
 162          //-------------------------------------------------------------------
 163          uchar IICreceiveByte(void)
 164          {
 165   1              uchar idata n=8;     // 从SDA线上读取一上数据字节，共八位
 166   1              uchar tdata=0;
 167   1              while(n--)
 168   1              {
 169   2                 SDA = 1;
 170   2                 SCL = 1;
 171   2                 tdata =tdata<<1;                 //左移一位
 172   2                      if(SDA == 1)
 173   2                        tdata = tdata|0x01;   // 若接收到的位为1，则数据的最后一位置1
 174   2                      else 
 175   2                        tdata = tdata&0xfe;   // 否则数据的最后一位置0
 176   2                 SCL = 0;
 177   2               }
 178   1      
 179   1               return(tdata);
C51 COMPILER V9.01   PCF8591                                                               07/21/2011 22:01:13 PAGE 4   

 180   1      }
 181          //-------------------------------------------------------------------
 182          // 函数名称： ADC_PCF8591
 183          // 入口参数： controlbyte控制字
 184          // 函数功能： 连续读入4路通道的A/D转换结果到receivebuf
 185          //-------------------------------------------------------------------
 186          void ADC_PCF8591(uchar controlbyte)
 187          { 
 188   1          uchar idata receive_da,i=0;
 189   1      
 190   1              iic_start();
 191   1      
 192   1              IICSendByte(PCF8591_WRITE);     //控制字
 193   1              check_ACK();
 194   1              if(askflag == 1)
 195   1              {
 196   2                      SystemError = 1;
 197   2                      return;
 198   2              }
 199   1      
 200   1              IICSendByte(controlbyte);       //控制字
 201   1              check_ACK();
 202   1              if(askflag == 1)
 203   1              {
 204   2                      SystemError = 1;
 205   2                      return;
 206   2              }
 207   1      
 208   1          iic_start();                //重新发送开始命令
 209   1              IICSendByte(PCF8591_READ);      //控制字
 210   1              check_ACK();
 211   1              if(askflag == 1)
 212   1              {
 213   2                      SystemError = 1;
 214   2                      return;
 215   2              }
 216   1               
 217   1          IICreceiveByte();   //空读一次，调整读顺序
 218   1          slave_ACK();        //收到一个字节后发送一个应答位
 219   1      
 220   1              while(i<4)
 221   1              {  
 222   2                receive_da=IICreceiveByte();
 223   2                receivebuf[i++]=receive_da;
 224   2                slave_ACK();       //收到一个字节后发送一个应答位
 225   2              }
 226   1              slave_NOACK();       //收到最后一个字节后发送一个非应答位
 227   1              iic_stop();
 228   1      //      delay(100);
 229   1      }
 230                  uchar iden=0;
 231          
 232          
 233          
 234                   void run()
 235          {
 236   1               iden=0;
 237   1                      iicInit();                    //I2C总线初始化
 238   1                      ADC_PCF8591(0x04);
 239   1              
 240   1      
 241   1              if(SystemError == 1)      //有错误，重新来
C51 COMPILER V9.01   PCF8591                                                               07/21/2011 22:01:13 PAGE 5   

 242   1                {
 243   2                      iicInit();                                //I2C总线初始化
 244   2                  ADC_PCF8591(0x04);
 245   2                 }  
 246   1      }
 247          
 248          
 249          
 250                  /******************************************************************/
 251          /*                                                                */
 252          /* 数据处理与显示                                                 */
 253          /* 将采集到的数据进行16进制转换为ASCLL码。                        */
 254          /*                                                                */
 255          /******************************************************************/
 256           
 257          
 258                  #define N 12
 259                  char A=5;
 260          
 261          void conver(uchar val)
 262          {
 263   1              //  dis[2]=val/26;   //AD值转换为3为BCD码，最大为5.00V。
 264   1         
 265   1          // dis[3]=val%26;   //余数暂存
 266   1          // dis[3]=dis[3]*10;    //计算小数第一位
 267   1          // dis[1]=dis[3]/26;
 268   1         
 269   1          // dis[3]=dis[3]%26;
 270   1          // dis[3]=dis[3]*10;    //计算小数第二位
 271   1          // dis[0]=dis[3]/26;    
 272   1                dis[2]=val/100;
 273   1               
 274   1                dis[1]=val/10%10;
 275   1                dis[0]=val%10;                                                                        //
 276   1               
 277   1      }
 278          char show_value(char n)
 279          
 280          {  
 281   1       /*  uchar val;
 282   1         uchar count,i,j;
 283   1         uchar value_buf[N];
 284   1         int  sum=0;
 285   1         for  (count=0;count<N;count++)
 286   1         {
 287   1                      run();
 288   1            value_buf[count] = receivebuf[n];
 289   1            delay(1);
 290   1         }
 291   1         for (j=0;j<N-1;j++)
 292   1         {
 293   1            for (i=0;i<N-j;i++)
 294   1            {
 295   1               if ( value_buf[i]>value_buf[i+1] )
 296   1               {
 297   1                          uchar temp ;
 298   1                  temp = value_buf[i];
 299   1                  value_buf[i] = value_buf[i+1];
 300   1                   value_buf[i+1] = temp;
 301   1               }
 302   1            }
 303   1         }
C51 COMPILER V9.01   PCF8591                                                               07/21/2011 22:01:13 PAGE 6   

 304   1         for(count=1;count<N-1;count++)
 305   1         {
 306   1            sum += value_buf[count];
 307   1                }
 308   1         val = (uchar)(sum/(N-2));
 309   1      
 310   1               if(n==0)
 311   1               {
 312   1                      A=3;
 313   1               }else if(n==1)
 314   1               {
 315   1                      A=5;
 316   1               }else if(A==2)
 317   1               {
 318   1                      A=5;
 319   1               }
 320   1              if(backs[n]+A>val&&backs[n]-A<val)
 321   1              {
 322   1                      val=backs[n];
 323   1                      
 324   1              }else
 325   1              {
 326   1                         backs[n] = val;
 327   1              }         */
 328   1              run();
 329   1          return receivebuf[n];       
 330   1              //return val;   
 331   1              
 332   1              
 333   1              
 334   1               
 335   1        
 336   1      } 
 337          
 338          //-------------------------------------------------------------------
 339          // 函数名称： main
 340          // 函数功能： 主程序
 341          //-------------------------------------------------------------------
 342          main()
 343          {
 344   1         
 345   1              TMOD=0x01;                //延时
 346   1              EA=1;
 347   1              ET0=1;
 348   1              TR0=1;
 349   1              TH0=(65535-10000)/256;
 350   1              TL0=(65535-10000)%256;
 351   1              
 352   1        while(1)
 353   1        {
 354   2                  conver(dat[0]);       
 355   2                  P0=table[dis[2]];//整数位显示
 356   2              P2=Tab[1];
 357   2                      delay(1);
 358   2              P0=table[dis[1]];        //第一位小数显示 
 359   2              P2=Tab[2];
 360   2                      delay(1);
 361   2                      P0=table[dis[0]];        //第一位小数显示 
 362   2              P2=Tab[3];
 363   2                      delay(1);
 364   2              
 365   2            
C51 COMPILER V9.01   PCF8591                                                               07/21/2011 22:01:13 PAGE 7   

 366   2                conver(dat[1]); 
 367   2                  P0=table[dis[2]];//整数位显示
 368   2              P2=Tab[5];
 369   2                      delay(1);
 370   2              P0=table[dis[1]];        //第一位小数显示 
 371   2              P2=Tab[6];
 372   2                      delay(1);
 373   2                      P0=table[dis[0]];        //第一位小数显示 
 374   2              P2=Tab[7];
 375   2                      delay(1);
 376   2               /* conver(dat[2]);              
 377   2                  P0=table[dis[2]];//整数位显示
 378   2              P2=0xbf;
 379   2                      delay(1);
 380   2              P0=table[dis[1]];        //第一位小数显示 
 381   2              P2=0x7f;
 382   2                  delay(1);
 383   2                       */
 384   2               // iicInit();                //I2C总线初始化      
 385   2           // delay(50);                       //延时
 386   2        }
 387   1      }
 388          
 389          
 390          void timer0() interrupt 1
 391          {
 392   1                
 393   1              if(iden==40)
 394   1      {
 395   2                        dat[0]=show_value(0); //显示通道0
 396   2                        dat[1]=show_value(1); //显示通道1
 397   2                        dat[2]=show_value(2); //显示通道2
 398   2                        dat[3]=show_value(3); //显示通道3     
 399   2      iden=0;         
 400   2      } 
 401   1      iden++;
 402   1              TH0=(65535-10000)/256;
 403   1              TL0=(65535-10000)%256;
 404   1      }
 405          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    565    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18       1
   IDATA SIZE       =      8       4
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

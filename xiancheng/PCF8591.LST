C51 COMPILER V8.02   PCF8591                                                               06/30/2011 08:45:33 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE PCF8591
OBJECT MODULE PLACED IN PCF8591.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE PCF8591.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          //-----------------------函数声明，变量定义------------------------
   3          #include <reg51.h>
   4          #include <intrins.h>
   5          unsigned char code table[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};//定义共阳数码管显示字型码 
   6          sbit SCL=P1^2;                   // 将p1.2口模拟时钟口
   7          sbit SDA=P1^3;                   // 将p1.3口模拟数据口
   8          bit askflag;
   9          #define uchar unsigned char
  10          #define uint  unsigned int
  11          #define disdata  P0              //显示数据码输出口
  12          
  13          sbit LCD_RS = P2^0;             
  14          sbit LCD_RW = P2^1;
  15          sbit LCD_EN = P2^2;
  16          
  17          uint data dis[4]={0x00,0x00,0x00,0x00}; 
  18                                    //定义3个显示数据单元和1个数据存储单元
  19          
  20          uchar code dis4[] = {"1- .  V  2- .  V"};
  21          uchar code dis5[] = {"3- .  V  4- .  V"};
  22          
  23          
  24          #define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
  25                                   
  26          bit   bdata SystemError;                //从机错误标志位
  27          
  28          /*********************** PCF8591专用变量定义 ***********************/
  29          
  30          #define PCF8591_WRITE   0x90 
  31          #define PCF8591_READ    0x91
  32          #define  NUM  4                     //接收和发送缓存区的深度
  33          uchar idata receivebuf[NUM];    //数据接收缓冲区
  34          
  35          /*******************************************************************/
  36          /*                                                                 */
  37          /*  延时函数                                                       */
  38          /*                                                                 */
  39          /*******************************************************************/
  40          
  41          void delay(int ms)
  42          {
  43   1          while(ms--)
  44   1              {
  45   2            uchar i;
  46   2                for(i=0;i<250;i++)  
  47   2                 {
  48   3                  _nop_();                       
  49   3                      _nop_();
  50   3                      _nop_();
  51   3                      _nop_();
  52   3                 }
  53   2              }
  54   1      }               
  55          
C51 COMPILER V8.02   PCF8591                                                               06/30/2011 08:45:33 PAGE 2   

  56          /******************************************************************/
  57          /*                                                                */
  58          /* 数据处理与显示                                                 */
  59          /* 将采集到的数据进行16进制转换为ASCLL码。                        */
  60          /*                                                                */
  61          /******************************************************************/
  62          
  63          show_value(uchar ad_data)
  64          
  65          {   
  66   1          dis[2]=ad_data/51;   //AD值转换为3为BCD码，最大为5.00V。
  67   1          dis[2]=dis[2]+0x30;  //转换为ACSII码
  68   1          dis[3]=ad_data%51;   //余数暂存
  69   1          dis[3]=dis[3]*10;    //计算小数第一位
  70   1          dis[1]=dis[3]/51;
  71   1          dis[1]=dis[1]+0x30;  //转换为ACSII码
  72   1          dis[3]=dis[3]%51;
  73   1          dis[3]=dis[3]*10;    //计算小数第二位
  74   1          dis[0]=dis[3]/51;                                                                             //
  75   1          dis[0]=dis[0]+0x30;  //转换为ACSII码           
  76   1      } 
  77          //-------------------------------------------------------------------
  78          // 函数名称： iic_start()
  79          // 函数功能： 启动I2C总线子程序
  80          //-------------------------------------------------------------------
  81          void iic_start(void)
  82          { //时钟保持高，数据线从高到低一次跳变，I2C通信开始
  83   1              SDA = 1;     
  84   1              SCL = 1;
  85   1              delayNOP();      // 延时5us 
  86   1              SDA = 0;
  87   1              delayNOP();
  88   1          SCL = 0;
  89   1      }
  90          //-------------------------------------------------------------------
  91          // 函数名称： iic_stop()
  92          // 函数功能： 停止I2C总线数据传送子程序
  93          //-------------------------------------------------------------------
  94          void iic_stop(void)
  95          {       
  96   1              SDA = 0;           //时钟保持高，数据线从低到高一次跳变，I2C通信停止
  97   1              SCL = 1;
  98   1              delayNOP();
  99   1              SDA = 1;
 100   1              delayNOP();
 101   1          SCL = 0;
 102   1      }
 103          //------------------------------------------------------------------
 104          // 函数名称： iicInit_()
 105          // 函数功能： 初始化I2C总线子程序
 106          //------------------------------------------------------------------
 107           void iicInit(void)
 108             {
 109   1         SCL = 0;
 110   1         iic_stop();  
 111   1         }  
 112          //-------------------------------------------------------------------
 113          // 函数名称： slave_ACK
 114          // 函数功能： 从机发送应答位子程序
 115          //-------------------------------------------------------------------
 116          void slave_ACK(void)
 117          {
C51 COMPILER V8.02   PCF8591                                                               06/30/2011 08:45:33 PAGE 3   

 118   1              SDA = 0;  
 119   1              SCL = 1;
 120   1              delayNOP();     
 121   1              SCL = 0;
 122   1      }
 123          //-------------------------------------------------------------------
 124          // 函数名称： slave_NOACK
 125          // 函数功能： 从机发送非应答位子程序，迫使数据传输过程结束
 126          //-------------------------------------------------------------------
 127          void slave_NOACK(void)
 128          { 
 129   1              SDA = 1;
 130   1              SCL = 1;
 131   1              delayNOP();
 132   1              SDA = 0;
 133   1          SCL = 0;  
 134   1      }
 135          //-------------------------------------------------------------------
 136          // 函数名称： check_ACK
 137          // 函数功能： 主机应答位检查子程序，迫使数据传输过程结束
 138          //-------------------------------------------------------------------
 139          void check_ACK(void)
 140          {           
 141   1          SDA = 1;        // 将p1.1设置成输入，必须先向端口写1
 142   1              SCL = 1;
 143   1              askflag = 0;
 144   1              delayNOP();   
 145   1              if(SDA == 1)    // 若SDA=1表明非应答，置位非应答标志askflag
 146   1          askflag = 1;
 147   1              SCL = 0;
 148   1      }
 149          //-------------------------------------------------------------------
 150          // 函数名称： IICSendByte
 151          // 入口参数： ch
 152          // 函数功能： 发送一个字节
 153          //-------------------------------------------------------------------
 154          void IICSendByte(uchar ch)
 155           
 156          {
 157   1              unsigned char idata n=8;     // 向SDA上发送一位数据字节，共八位
 158   1      
 159   1              while(n--)
 160   1              { 
 161   2              if((ch&0x80) == 0x80)    // 若要发送的数据最高位为1则发送位1
 162   2                 {
 163   3                              SDA = 1;    // 传送位1
 164   3                              SCL = 1;
 165   3                          delayNOP();
 166   3                      //      SDA = 0;        
 167   3                              SCL = 0; 
 168   3                 }
 169   2                      else
 170   2                      {  
 171   3                              SDA = 0;    // 否则传送位0
 172   3                              SCL = 1;
 173   3                              delayNOP();
 174   3                              SCL = 0;
 175   3                      }
 176   2                      ch = ch<<1;    // 数据左移一位
 177   2              }
 178   1      }
 179          //-------------------------------------------------------------------
C51 COMPILER V8.02   PCF8591                                                               06/30/2011 08:45:33 PAGE 4   

 180          // 函数名称： IICreceiveByte
 181          // 返回接收的数据
 182          // 函数功能： 接收一字节子程序
 183          //-------------------------------------------------------------------
 184          uchar IICreceiveByte(void)
 185          {
 186   1              uchar idata n=8;     // 从SDA线上读取一上数据字节，共八位
 187   1              uchar tdata=0;
 188   1              while(n--)
 189   1              {
 190   2                 SDA = 1;
 191   2                 SCL = 1;
 192   2                 tdata =tdata<<1;                 //左移一位
 193   2                      if(SDA == 1)
 194   2                        tdata = tdata|0x01;   // 若接收到的位为1，则数据的最后一位置1
 195   2                      else 
 196   2                        tdata = tdata&0xfe;   // 否则数据的最后一位置0
 197   2                 SCL = 0;
 198   2               }
 199   1      
 200   1               return(tdata);
 201   1      }
 202          //-------------------------------------------------------------------
 203          // 函数名称： DAC_PCF8591
 204          // 入口参数： slave_add从机地址,n要发送的数据个数
 205          // 函数功能： 发送n位数据子程序
 206          //-------------------------------------------------------------------
 207          void DAC_PCF8591(uchar controlbyte,uchar w_data)
 208          {    
 209   1              
 210   1              iic_start();                    // 启动I2C
 211   1              delayNOP();
 212   1      
 213   1              IICSendByte(PCF8591_WRITE);     // 发送地址位
 214   1              check_ACK();                    // 检查应答位
 215   1          if(askflag == 1)
 216   1               { 
 217   2                      SystemError = 1;
 218   2                      return;                     // 若非应答，置错误标志位
 219   2           }
 220   1          IICSendByte(controlbyte&0x77);      //Control byte 
 221   1              check_ACK();                    //检查应答位
 222   1          if(askflag == 1)
 223   1               { 
 224   2                      SystemError = 1;
 225   2                      return;                    // 若非应答，置错误标志位
 226   2               }
 227   1          IICSendByte(w_data);               //data byte
 228   1              check_ACK();                  // 检查应答位
 229   1          if(askflag == 1)
 230   1               { 
 231   2                      SystemError = 1;
 232   2              return;   // 若非应答表明器件错误或已坏，置错误标志位SystemError
 233   2               }
 234   1              iic_stop();         // 全部发完则停止
 235   1              delayNOP();
 236   1              delayNOP();
 237   1              delayNOP();
 238   1              delayNOP();     
 239   1      }
 240          //-------------------------------------------------------------------
 241          // 函数名称： ADC_PCF8591
C51 COMPILER V8.02   PCF8591                                                               06/30/2011 08:45:33 PAGE 5   

 242          // 入口参数： controlbyte控制字
 243          // 函数功能： 连续读入4路通道的A/D转换结果到receivebuf
 244          //-------------------------------------------------------------------
 245          void ADC_PCF8591(uchar controlbyte)
 246          { 
 247   1          uchar idata receive_da,i=0;
 248   1      
 249   1              iic_start();
 250   1      
 251   1              IICSendByte(PCF8591_WRITE);     //控制字
 252   1              check_ACK();
 253   1              if(askflag == 1)
 254   1              {
 255   2                      SystemError = 1;
 256   2                      return;
 257   2              }
 258   1      
 259   1              IICSendByte(controlbyte);       //控制字
 260   1              check_ACK();
 261   1              if(askflag == 1)
 262   1              {
 263   2                      SystemError = 1;
 264   2                      return;
 265   2              }
 266   1      
 267   1          iic_start();                //重新发送开始命令
 268   1              IICSendByte(PCF8591_READ);      //控制字
 269   1              check_ACK();
 270   1              if(askflag == 1)
 271   1              {
 272   2                      SystemError = 1;
 273   2                      return;
 274   2              }
 275   1               
 276   1          IICreceiveByte();   //空读一次，调整读顺序
 277   1          slave_ACK();        //收到一个字节后发送一个应答位
 278   1      
 279   1              while(i<4)
 280   1              {  
 281   2                receive_da=IICreceiveByte();
 282   2                receivebuf[i++]=receive_da;
 283   2                slave_ACK();       //收到一个字节后发送一个应答位
 284   2              }
 285   1              slave_NOACK();       //收到最后一个字节后发送一个非应答位
 286   1              iic_stop();
 287   1      }
 288          //-------------------------------------------------------------------
 289          // 函数名称： main
 290          // 函数功能： 主程序
 291          //-------------------------------------------------------------------
 292          sbit a =   P2^5;
 293          sbit b =   P2^6;
 294          sbit c =   P2^7;
 295          
 296                           void aaa()
 297                           {
 298   1                               unsigned char i,j;     
 299   1               for(i=0;i<10;i++)
 300   1                for(j=0;j<33;j++)      ;
 301   1                       }
 302          main()
 303          {
C51 COMPILER V8.02   PCF8591                                                               06/30/2011 08:45:33 PAGE 6   

 304   1          uchar i,l;
 305   1          delay(10);                 //延时           
 306   1              
 307   1           i = 0;
 308   1          while(dis4[i] != '\0')
 309   1           {                         //显示字符
 310   2            
 311   2             i++;
 312   2           }
 313   1      
 314   1         
 315   1           i = 0;
 316   1          while(dis5[i] != '\0')
 317   1           {
 318   2                  //显示字符
 319   2             i++;
 320   2           }
 321   1              
 322   1        while(1)
 323   1        {
 324   2              iicInit();                    //I2C总线初始化
 325   2          ADC_PCF8591(0x04);
 326   2      
 327   2              if(SystemError == 1)      //有错误，重新来
 328   2                {
 329   3                      iicInit();                                //I2C总线初始化
 330   3                  ADC_PCF8591(0x04);
 331   3                 }   
 332   2              
 333   2              for(l=0;l<4;l++)        
 334   2               {
 335   3                show_value(receivebuf[0]); //显示通道0 
 336   3                                
 337   3                      
 338   3                               P0 = table[1];
 339   3                               P2 = dis[2];
 340   3                               aaa();
 341   3                      /*       P2=0x7f;
 342   3                              P0=table[dis[2]];
 343   3                                      
 344   3                                               aaa();
 345   3                                      P2=0xbf;
 346   3                              P0=table[dis[1]];
 347   3                                               aaa();
 348   3      
 349   3                                              P2=0xdf;
 350   3                              P0=table[dis[0]];
 351   3                                               
 352   3                 ;                       aaa(); */
 353   3                      
 354   3            show_value(receivebuf[1]); //显示通道1     
 355   3                  
 356   3      
 357   3                show_value(receivebuf[2]); //显示通道2                 
 358   3                 
 359   3            show_value(receivebuf[3]); //显示通道3     
 360   3               
 361   3      
 362   3                iicInit();                  //I2C总线初始化  
 363   3            DAC_PCF8591(0x40,receivebuf[0]); //D/A输出
 364   3      
 365   3                      if(SystemError == 1)      //有错误，重新来
C51 COMPILER V8.02   PCF8591                                                               06/30/2011 08:45:33 PAGE 7   

 366   3                  {
 367   4                       iicInit();                               //I2C总线初始化
 368   4                       DAC_PCF8591(0x40,receivebuf[0]); //D/A输出
 369   4                  }           
 370   3      
 371   3            //delay(50);                       //延时
 372   3               }
 373   2      
 374   2         }
 375   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    598    ----
   CONSTANT SIZE    =     44    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       1
   IDATA SIZE       =      4       4
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
